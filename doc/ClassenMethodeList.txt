/Core/datatypes.php
[datatypes.php]
[TicModule] abstract
construtor ($autor=array(),$ver="1",$name="Datatype",$desc="incorrectly used as plain module",$depend=array("Core" => "1"))

    function getAuthors() return Autor Array

    function getDependencies()
    // Gibt einen Array zurück mit den Namen und Version der Module die vor dem eigenem geladen
    // werden müssen bevor das Modul geladen wird und installiert bevor das Modul installiert wird.
    // Format:  (ModuleName => ModuleVersion)
    
    function getDescription() return  Text, welcher das Modul beschreibt.
	
    function getName() return String
 
    function __toString() return getName()
    
    function getVersion() return int

    function getSmarty_template() return  smarty_template

    function getSmarty_vars() return  smarty_vars

    function createMenuEntries($menuroot) return false

    function isDBMod() return false

    function onLoad()
    // Wird bei jedem T.I.C. Seitenaufbau aufgerufen, alle Abhängigkeiten sind schon geladen
    
    function onPostLoad() // Wird ausgeführt nachdem alle Module geladen sind.
    
    function onUnload() // Letzte mögliche Aktion
    
    function onPreExecute($mod_name, $menuentry)  // Wird vor dem Ausführen eines Moduls ausgeführt
    
    function onExecute($menuentry) die('Non-executable class executed!');
    // Wird nur aufgerufen wenn das Modul explizit geladen ist, sprich vom
    // User ausgewählt wurde  (wrapper.php?mod=MEINMODUL)
    
    function onPostExecute($mod_name, $menuentry) // Wird nach dem Ausführen eines Moduls ausgeführt
    
    function onTick($tick) // Wird bei jedem Tick einmal aufgerufen.
    
    function execInstall($installdata)

    function execUpdate($installdata)
    
    function getModPath()
    {
        global $tic;
        return $tic->server_root.$this->getName().'/';
    }
    
    function setTemplate($filename)
    
    function setVar($var_name, $var_value)
        $this->smarty_vars[$var_name] = $var_value;

[Author]
function getName() return string
	
function getNick() return string

function getMail() return string


[MenuEntry]
 __construct($name, $priority = 0, $module = '', $execParam = '')

    public function getName() return string

    public function getExecParam()  return $this->execParam

    public function getModule() return Modul

    public function getChildByName($name) return Child or false

    public function getChildren() return Child

    public function getPriority() return Prio

    public function addChild($entry) return boolean

    public function isLeaf() $this->children == array()

    public function cmp($a, $b)  return $a->priority <= $b->priority ? -1 : 1;

[/datatypes.php]
[Core.class.php] extends TICModule
__constructor()

function onLoad()

function onUnload()

function set($mod_name, $key, $value)

function get($mod_name, $key, $value = false) return valure or false

function microtime_float() return int

function getTICAdr() return string

function getInstallQueriesMySQL() return array

function getInstallQueriesPostgreSQL() return array

geärbte functionen von TICModule : getAuthors(),getDependencies(),getDescription(), getName(), __toString(),getVersion() ,getSmarty_template() ,
getSmarty_vars(),createMenuEntries($menuroot),isDBMod(),onLoad(),onPostLoad(),onUnload(),onPreExecute($mod_name, $menuentry),
onExecute($menuentry),onPostExecute($mod_name, $menuentry),onTick($tick),execInstall($installdata),($installdata),
getModPath(),setTemplate(),setVar()
[\Core.class.php]

[ModuleManger.class.php]
function getVersion() return int

function getName() return string

function ModuleManager($tic_path)

function modsInitialize($installdata = false, $execUpdate = false, $noAuth = false)

function _calcDependencyOrder($modlist) return array

function modExecute($mod_name, $menuentry)

function modsUnload()

 function modExists($mod_name) return boolean

function modIsLoaded($mod_name)  return boolean

function modListLoaded() return array

function _modDirList($mod_path) return array

function _modAdd($mod_name)

function _modLoad($mod_name)

function _installMods($sortedMods, $installdata)

function error($modulName, $text) return true

function info($modulName, $text)

function isError() return boolean
[/ModuleManger.class.php]